name: "CI"
on: 
  push:
    branches:
      - master
    
env:
  NX_CLOUD_DISTRIBUTED_EXECUTION: true
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  main:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout master
        with:
          fetch-depth: 0
      
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
      
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup git user
        run: git config --global user.email talefronny@gmail.com && git config --global user.name diabl0269

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: npm ci

      - name: Test
        run: npx nx affected:test --parallel --max-parallel=3

      - name: Lint
        run: npx nx affected:lint --parallel --max-parallel=3

      - name: E2E tests
        run: npx nx affected:e2e --parallel --max-parallel=3
      
      - name: Build
        run: npx nx affected:build --parallel --max-parallel=3 --prod

      - name: Update package.json versions
        run: NX_CLOUD_DISTRIBUTED_EXECUTION=false npx nx affected --target=version --parallel --max-parallel=2 -- --patch

      - name: Push new versions and tags
        run: git push --follow-tags origin master

      - name: Deploy npm packages
        run: NX_CLOUD_DISTRIBUTED_EXECUTION=false npx nx affected --target=deploy --parallel --max-parallel=2
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
          
      - name: Stop agents
        if: ${{ always() }}
        run: npx nx-cloud stop-all-agents
    
  pr:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        name: Checkout master
        with:
          fetch-depth: 0
      
      - name: Derive appropriate SHAs for base and head for `nx affected` commands
        uses: nrwl/nx-set-shas@v2
      
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          registry-url: 'https://registry.npmjs.org'

      - name: Setup git user
        run: git config --global user.email talefronny@gmail.com && git config --global user.name diabl0269

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Install dependencies
        run: npm ci

      - name: Test
        run: npx nx affected:test --parallel --max-parallel=3

      - name: Lint
        run: npx nx affected:lint --parallel --max-parallel=3

      - name: E2E tests
        run: npx nx affected:e2e --parallel --max-parallel=3
      
      - name: Build
        run: npx nx affected:build --parallel --max-parallel=3 --prod

      - name: Stop agents
        if: ${{ always() }}
        run: npx nx-cloud stop-all-agents
    
  agents: 
    runs-on: ubuntu-latest
    name: Agent
    timeout-minutes: 10
    strategy:
      matrix:
        agent: [1,2,3]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "14"
      
      - name: Install dependencies
        run: npm i

      - name: Start NX agent ${{ matrix.agent }}
        run: npx nx-cloud start-agent
